// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Nodefs from "node:fs";
import * as Process from "process";
import * as Nodepath from "node:path";
import RemarkGfm from "remark-gfm";
import RemarkToc from "remark-toc";
import RemarkMath from "remark-math";
import RehypeKatex from "rehype-katex";
import RehypePrettyCode from "rehype-pretty-code";
import * as Rsc from "next-mdx-remote/rsc";

var $$process = Process;

var postsDirectory = Nodepath.join($$process.cwd(), "public", "posts");

function getAllPostFileNames() {
  var allFiles = Nodefs.readdirSync(postsDirectory);
  var mdxFiles = allFiles.filter(function (file) {
        return file.endsWith(".mdx");
      });
  return mdxFiles.map(function (file) {
              return file.replace(".mdx", "");
            });
}

async function getContentAndFrontmatter(fileName) {
  var path = Nodepath.join(postsDirectory, fileName + ".mdx");
  var post = Nodefs.readFileSync(path, {
        encoding: "utf8"
      });
  return await Rsc.compileMDX({
              source: post,
              options: {
                mdxOptions: {
                  remarkPlugins: [
                    RemarkGfm,
                    RemarkMath,
                    [
                      RemarkToc,
                      {
                        heading: "목차"
                      }
                    ]
                  ],
                  rehypePlugins: [
                    [
                      RehypePrettyCode,
                      {
                        theme: {
                          dark: "solarized-dark",
                          light: "solarized-light"
                        }
                      }
                    ],
                    [
                      RehypeKatex,
                      {
                        throwOnError: true,
                        strict: true
                      }
                    ]
                  ],
                  format: "mdx"
                },
                parseFrontmatter: true
              },
              components: {
                h1: "h2"
              }
            });
}

export {
  $$process ,
  postsDirectory ,
  getAllPostFileNames ,
  getContentAndFrontmatter ,
}
/* process Not a pure module */
